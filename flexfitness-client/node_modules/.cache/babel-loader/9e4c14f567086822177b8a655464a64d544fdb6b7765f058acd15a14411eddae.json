{"ast":null,"code":"var _jsxFileName = \"/home/bsquiat/Development/code/Phase3/phase-3-project/flexfitness-client/src/components/Searchbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredExercises, setFilteredExercises] = useState([]);\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n  };\n  const handleSearch = () => {\n    const searchQuery = searchTerm.trim().toLowerCase();\n    if (searchQuery) {\n      // Make your API request here with the appropriate URL and query parameters\n      fetch(`http://localhost:9292/exercises?search=${searchQuery}`).then(response => response.json()).then(data => {\n        const filteredExercises = data.results; // Adjust this based on your API response\n        setFilteredExercises(filteredExercises); // Update the filtered exercises state\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search exercises...\",\n      value: searchTerm,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), filteredExercises.map(exercise => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: exercise.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exercise.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, exercise.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"gYGKD+A0nezXFWPGlNcl6RpsjCk=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","_s","searchTerm","setSearchTerm","filteredExercises","setFilteredExercises","handleInputChange","e","term","target","value","handleSearch","searchQuery","trim","toLowerCase","fetch","then","response","json","data","results","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","exercise","name","description","id","_c","$RefreshReg$"],"sources":["/home/bsquiat/Development/code/Phase3/phase-3-project/flexfitness-client/src/components/Searchbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredExercises, setFilteredExercises] = useState([]);\n\n  const handleInputChange = (e) => {\n    const term = e.target.value;\n    setSearchTerm(term);\n  };\n\n  const handleSearch = () => {\n    const searchQuery = searchTerm.trim().toLowerCase();\n    if (searchQuery) {\n      // Make your API request here with the appropriate URL and query parameters\n      fetch(`http://localhost:9292/exercises?search=${searchQuery}`)\n        .then(response => response.json())\n        .then(data => {\n          const filteredExercises = data.results; // Adjust this based on your API response\n          setFilteredExercises(filteredExercises); // Update the filtered exercises state\n        });\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search exercises...\"\n        value={searchTerm}\n        onChange={handleInputChange}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      {/* Render the filtered exercises */}\n      {filteredExercises.map(exercise => (\n        <div key={exercise.id}>\n          {/* Render exercise details */}\n          <h3>{exercise.name}</h3>\n          <p>{exercise.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BP,aAAa,CAACK,IAAI,CAAC;EACrB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAGV,UAAU,CAACW,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnD,IAAIF,WAAW,EAAE;MACf;MACAG,KAAK,CAAE,0CAAyCH,WAAY,EAAC,CAAC,CAC3DI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZ,MAAMf,iBAAiB,GAAGe,IAAI,CAACC,OAAO,CAAC,CAAC;QACxCf,oBAAoB,CAACD,iBAAiB,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC;IACN;EACF,CAAC;;EAED,oBACEL,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,qBAAqB;MACjCb,KAAK,EAAER,UAAW;MAClBsB,QAAQ,EAAElB;IAAkB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAElB,YAAa;MAAAU,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG7CxB,iBAAiB,CAAC0B,GAAG,CAACC,QAAQ,iBAC7BhC,OAAA;MAAAsB,QAAA,gBAEEtB,OAAA;QAAAsB,QAAA,EAAKU,QAAQ,CAACC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB7B,OAAA;QAAAsB,QAAA,EAAIU,QAAQ,CAACE;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHrBG,QAAQ,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA1CID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}